@startuml

/' diagram meta data start
config=StructureConfiguration;
{
  "projectClassification": {
    "searchMode": "OpenProject", // OpenProject, AllProjects
    "includedProjects": "",
    "pathEndKeywords": "*.impl",
    "isClientPath": "",
    "isClientName": "",
    "isTestPath": "",
    "isTestName": "",
    "isMappingPath": "",
    "isMappingName": "",
    "isDataAccessPath": "",
    "isDataAccessName": "",
    "isDataStructurePath": "",
    "isDataStructureName": "",
    "isInterfaceStructuresPath": "",
    "isInterfaceStructuresName": "",
    "isEntryPointPath": "",
    "isEntryPointName": "",
    "treatFinalFieldsAsMandatory": false
  },
  "graphRestriction": {
    "classPackageExcludeFilter": "",
    "classPackageIncludeFilter": "",
    "classNameExcludeFilter": "",
    "classNameIncludeFilter": "",
    "methodNameExcludeFilter": "",
    "methodNameIncludeFilter": "",
    "removeByInheritance": "", // inheritance/annotation based filtering is done in a second step
    "removeByAnnotation": "",
    "removeByClassPackage": "", // cleanup the graph after inheritance/annotation based filtering is done
    "removeByClassName": "",
    "cutMappings": false,
    "cutEnum": true,
    "cutTests": true,
    "cutClient": true,
    "cutDataAccess": false,
    "cutInterfaceStructures": false,
    "cutDataStructures": false,
    "cutGetterAndSetter": true,
    "cutConstructors": true
  },
  "graphTraversal": {
    "forwardDepth": 6,
    "backwardDepth": 6,
    "classPackageExcludeFilter": "",
    "classPackageIncludeFilter": "",
    "classNameExcludeFilter": "",
    "classNameIncludeFilter": "",
    "methodNameExcludeFilter": "",
    "methodNameIncludeFilter": "",
    "hideMappings": false,
    "hideDataStructures": false,
    "hidePrivateMethods": true,
    "hideInterfaceCalls": true, // indirection: implementation -> interface (is hidden) -> implementation
    "onlyShowApplicationEntryPoints": false, // root node is included
    "useMethodCallsForStructureDiagram": "ForwardOnly" // ForwardOnly, BothDirections, No
  },
  "details": {
    "aggregation": "GroupByClass", // ByClass, GroupByClass, None
    "showClassGenericTypes": true,
    "showMethods": true,
    "showMethodParameterNames": true,
    "showMethodParameterTypes": true,
    "showMethodReturnType": true,
    "showPackageLevels": 2,
    "showDetailedClassStructure": true
  },
  "rootClass": "supply_package.Main",
  "extensionCallbackMethod": "" // qualified.class.name#methodName - signature: public static String method(String)
}
diagram meta data end '/



digraph g {
    rankdir="TB"
    splines=polyline
    

'nodes 
subgraph cluster_2048074998 { 
   	label=supply_package
	labeljust=l
	fillcolor="#ececec"
	style=filled
   
   Area2048074998[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)Area</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >-   Area_description: String [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   amount_of_shelves: int [1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   area_id: int [1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   max_shelves: int [1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   shelves_in_Area: List&lt;Shelf&gt; [0..*]</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ add_shelf(shelf_description: String): boolean</TD></TR>
<TR><TD ALIGN="LEFT" >+ add_to_area(item: Item, location_path: String): boolean</TD></TR>
<TR><TD ALIGN="LEFT" >+ add_to_area_v2(item: Item, location_path: String): boolean</TD></TR>
<TR><TD ALIGN="LEFT" >+ get_items_in_area(serialNum: int): Item</TD></TR>
<TR><TD ALIGN="LEFT" >+ remove_shelf(i: int): boolean</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

FaultyReport2048074998[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)FaultyReport</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ add_to_report(item: Item, faulty_reason: String)</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

Item2048074998[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)Item</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >-   creation_date: Date [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   exp_date: Date [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   location: String [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   serialNum: int [1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   shelf_of_item: Shelf [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   type: Item_type [0..1]</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

Item_type2048074998[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)Item_type</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >-   amount_in_storage: int [1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   amount_of_days_left_sale: int [1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   amount_on_shelves: int [1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   category: String [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   cost_price: float [1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   minimal_amount: int [1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   percentage_sale: int [1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   producer: String [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   selling_price: float [1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   size: String [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   sub_category: String [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   type_id: int [1]</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

Jsoncontroller2048074998[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)Jsoncontroller</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >-   supply: Supply [0..1]</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ add_item_shop(json: JsonObject)</TD></TR>
<TR><TD ALIGN="LEFT" >+ add_new_area(json: JsonObject)</TD></TR>
<TR><TD ALIGN="LEFT" >+ add_shelf_to_area(json: JsonObject)</TD></TR>
<TR><TD ALIGN="LEFT" >+ create_faulty_report()</TD></TR>
<TR><TD ALIGN="LEFT" >+ create_supply_report(json: JsonObject)</TD></TR>
<TR><TD ALIGN="LEFT" >+ get_cur_amount_type(json: JsonObject): int</TD></TR>
<TR><TD ALIGN="LEFT" >+ get_cur_amount_type_shelves(json: JsonObject): int</TD></TR>
<TR><TD ALIGN="LEFT" >+ get_cur_amount_type_storage(json: JsonObject): int</TD></TR>
<TR><TD ALIGN="LEFT" >+ get_item_cost_price(json: JsonObject): float</TD></TR>
<TR><TD ALIGN="LEFT" >+ get_item_location(json: JsonObject): String</TD></TR>
<TR><TD ALIGN="LEFT" >+ get_item_manufacturer(json: JsonObject): String</TD></TR>
<TR><TD ALIGN="LEFT" >+ get_item_selling_price(json: JsonObject): float</TD></TR>
<TR><TD ALIGN="LEFT" >+ get_item_type(json: JsonObject): int</TD></TR>
<TR><TD ALIGN="LEFT" >+ get_serial_num(json: JsonObject): int</TD></TR>
<TR><TD ALIGN="LEFT" >+ pass_days(days: int)</TD></TR>
<TR><TD ALIGN="LEFT" >+ remove_item(json: JsonObject)</TD></TR>
<TR><TD ALIGN="LEFT" >+ report_faulty_item(json: JsonObject)</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

Main2048074998[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)Main</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ main(args: String[])</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

Report2048074998[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)Report</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >-   creation_date: Date [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >#   line_counter: int [1]</TD></TR>
<TR><TD ALIGN="LEFT" >#   report_info: String [0..1]</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ show()</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

Shelf2048074998[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)Shelf</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >-   amount_on_shelf: int [1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   items_on_shelf: List&lt;Item&gt; [0..*]</TD></TR>
<TR><TD ALIGN="LEFT" >-   max_items: int [1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   shelf_sub_category: String [0..1]</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ add_to_shelf(cur_item: Item, location_path: String): boolean</TD></TR>
<TR><TD ALIGN="LEFT" >+ getItem(serialNum: int): Item</TD></TR>
<TR><TD ALIGN="LEFT" >+ remove_from_shelf(cur_item: Item)</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

Shop2048074998[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)Shop</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >-   amount_of_areas: int [1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   max_areas: int [1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   shop_area: List&lt;Area&gt; [0..*]</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ add_area(description: String): boolean</TD></TR>
<TR><TD ALIGN="LEFT" >+ add_to_shop(new_item: Item): boolean</TD></TR>
<TR><TD ALIGN="LEFT" >+ add_to_shop_v2(new_item: Item): boolean</TD></TR>
<TR><TD ALIGN="LEFT" >+ find_area(area_description: String): Area</TD></TR>
<TR><TD ALIGN="LEFT" >+ getItem(serialNum: int): Item</TD></TR>
<TR><TD ALIGN="LEFT" >+ remove_area(area: Area): boolean</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

Storage2048074998[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)Storage</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >-   storageitems: List&lt;Item&gt; [0..*]</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ addItem(item: Item)</TD></TR>
<TR><TD ALIGN="LEFT" >+ getItem(serialnum: int): Item</TD></TR>
<TR><TD ALIGN="LEFT" >+ removeItem(item: Item): boolean</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

Supply2048074998[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)Supply</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >-   cur_date: Date [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   days_counter_from_report: int [1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   faultyReport: FaultyReport [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   itemTypes: List&lt;Item_type&gt; [0..*]</TD></TR>
<TR><TD ALIGN="LEFT" >-   shop: Shop [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   storage: Storage [0..1]</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ add_area_to_shop(area_category: String)</TD></TR>
<TR><TD ALIGN="LEFT" >+ add_newItem(type_id: int, producer: String, category: String, sub_category: String, size: String, cost_price: float, exprdate: Date, creation_date: Date)</TD></TR>
<TR><TD ALIGN="LEFT" >+ add_shelf_to_area(shelf_description: String, area_description: String)</TD></TR>
<TR><TD ALIGN="LEFT" >+ add_to_faulty_report(item: Item, faulty_description: String)</TD></TR>
<TR><TD ALIGN="LEFT" >+ alert_low_quantity_item_type(item_type: Item_type)</TD></TR>
<TR><TD ALIGN="LEFT" >+ getItem(serialNum: int): Item</TD></TR>
<TR><TD ALIGN="LEFT" >+ getType(type_id: int): Item_type</TD></TR>
<TR><TD ALIGN="LEFT" >+ pass_days(amount_of_days: int)</TD></TR>
<TR><TD ALIGN="LEFT" >+ removeItem(serialNum: int)</TD></TR>
<TR><TD ALIGN="LEFT" >+ remove_area_from_shop(area_category: String)</TD></TR>
<TR><TD ALIGN="LEFT" >+ send_faulty_report()</TD></TR>
<TR><TD ALIGN="LEFT" >+ supplyReport(category: String)</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

SupplyReport2048074998[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)SupplyReport</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ add_item_type(item_type: Item_type)</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

System_user2048074998[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)System_user</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >-   jcontroller: Jsoncontroller [0..1]</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ get_answer_manager()</TD></TR>
<TR><TD ALIGN="LEFT" >+ get_answer_storekeeper()</TD></TR>
<TR><TD ALIGN="LEFT" >+ get_answer_worker()</TD></TR>
<TR><TD ALIGN="LEFT" >+ print_menu_manager()</TD></TR>
<TR><TD ALIGN="LEFT" >+ print_menu_storekeeper()</TD></TR>
<TR><TD ALIGN="LEFT" >+ print_menu_worker()</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];
} 

'edges    
Area2048074998 -> Shelf2048074998[label="shelves_in_Area
[0..*]"];
Item2048074998 -> Item_type2048074998[label="type
[0..1]"];
Item2048074998 -> Shelf2048074998[label="shelf_of_item
[0..1]"];
Jsoncontroller2048074998 -> Supply2048074998[label="supply
[0..1]"];
Report2048074998 -> FaultyReport2048074998[arrowhead=none, arrowtail=empty, dir=both];
Report2048074998 -> SupplyReport2048074998[arrowhead=none, arrowtail=empty, dir=both];
Shelf2048074998 -> Item2048074998[label="items_on_shelf
[0..*]"];
Shop2048074998 -> Area2048074998[label="shop_area
[0..*]"];
Storage2048074998 -> Item2048074998[label="storageitems
[0..*]"];
Supply2048074998 -> Area2048074998[label="add_shelf_to_area() -> add_shelf()"];
Supply2048074998 -> FaultyReport2048074998[label="faultyReport
[0..1]"];
Supply2048074998 -> Item_type2048074998[label="itemTypes
[0..*]"];
Supply2048074998 -> Shelf2048074998[label="removeItem() -> remove_from_shelf()"];
Supply2048074998 -> Shop2048074998[label="shop
[0..1]"];
Supply2048074998 -> Storage2048074998[label="storage
[0..1]"];
System_user2048074998 -> Jsoncontroller2048074998[label="jcontroller
[0..1]"];
    
}
@enduml